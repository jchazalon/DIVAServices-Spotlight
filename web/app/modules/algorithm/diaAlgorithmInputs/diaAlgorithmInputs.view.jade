.algorithm-inputs
  form.form-horizontal(name='inputForm', novalidate)
    .repeat(ng-repeat='entry in vm.inputs')
      .repeat(ng-repeat='(type, settings) in entry')
        .form-group(ng-switch='', on='type')
          label.col-xs-4.col-lg-4.control-label(for='{{settings.name}}') {{settings.name}}
          .col-xs-8.col-lg-8(ng-switch-when='text')
            input.form-control(type='text',
                               name='{{settings.name}}',
                               id='{{settings.name}}',
                               ng-model='vm.model[settings.name]',
                               ng-minlength='{{settings.options.min}}',
                               ng-maxlength='{{settings.options.max}}',
                               ng-required='{{settings.options.required}}')
            span.help-block(ng-if='settings.description') {{settings.description}}
            .error(ng-show='inputForm.{{settings.name}}.$dirty && inputForm.{{settings.name}}.$invalid')
              small.error(ng-show='inputForm.{{settings.name}}.$error.required')
                | {{settings.name}} is required
              small.error(ng-show='inputForm.{{settings.name}}.$error.minlength')
                | {{settings.name}} must be at least {{settings.options.min}} characters long
              small.error(ng-show='inputForm.{{settings.name}}.$error.maxlength')
                | {{settings.name}} must not contain more than {{settings.options.max}} characters
          .col-xs-8.col-lg-8(ng-switch-when='number')
            input.form-control(type='number',
                               name='{{settings.name}}',
                               id='{{settings.name}}',
                               min='{{settings.options.min}}',
                               max='{{settings.options.max}}',
                               step='{{settings.options.steps}}',
                               ng-model='vm.model[settings.name]',
                               ng-required='{{settings.options.required}}')
            span.help-block(ng-if='settings.description') {{settings.description}}
            .error(ng-show='inputForm.{{settings.name}}.$dirty && inputForm.{{settings.name}}.$invalid')
          .col-xs-8.col-lg-8(ng-switch-when='inputFile')
            input.form-control(type='text',
                               name='{{settings.name}}',
                               id='{{settings.name}}',
                               fileType='{{settings.fileType}}'
                               ng-model='vm.model[settings.name]',
                               ng-required='{{settings.options.required}}')
            span.help-block(ng-if='settings.description') {{settings.description}}
            .error(ng-show='inputForm.{{settings.name}}.$dirty && inputForm.{{settings.name}}.$invalid')
              small.error(ng-show='inputForm.{{settings.name}}.$error.required')
                | {{settings.name}} is required
              small.error(ng-show='inputForm.{{settings.name}}.$error.min')
                | {{settings.name}} must not be smaller than {{settings.options.min}}
              small.error(ng-show='inputForm.{{settings.name}}.$error.max')
                | {{settings.name}} must not be bigger than {{settings.options.max}}
              small.error(ng-show='inputForm.{{settings.name}}.$error.number')
                | {{settings.name}} must be a number
          .col-xs-8.col-lg-8(ng-switch-when='checkbox')
            .checkbox
              label(for='{{settings.name}}')
                input(type='checkbox',
                      name='{{settings.name}}',
                      id='{{settings.name}}',
                      ng-checked='vm.model[settings.name]',
                      ng-click='vm.toggleCheckbox(settings.name)')
                span.help-block.help-block-checkbox(ng-if='settings.description') {{settings.description}}
          .col-xs-8.col-lg-8(ng-switch-when='select')
            select.form-control(name='{{settings.name}}',
                                id='{{settings.name}}',
                                ng-model='vm.model[settings.name]',
                                ng-required='{{settings.options.required}}',
                                ng-options='option for option in settings.options.values')
            span.help-block(ng-if='settings.description') {{settings.description}}
    .from-group
      .pull-right
        span.error(ng-if='!vm.validHighlighter') Please select a {{vm.highlighter}}
        button.btn.btn-primary(ng-click='vm.submit()', ng-disabled='inputForm.$invalid || !vm.validHighlighter') Submit
